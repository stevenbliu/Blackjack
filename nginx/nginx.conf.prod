worker_processes 1;

events {
    worker_connections 1024;
}

http {
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    server {
        listen 80;

        # Serve frontend (static files or dev proxy)
        location / {
            proxy_pass https://blackjack-frontend-ttx9.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/docs {
            # Serve docs without JWT check
            proxy_pass https://blackjack-backend-ctfq.onrender.com/api/docs;
        }

        location /api/openapi.json {
            limit_req zone=mylimit burst=5 nodelay;

            proxy_pass https://blackjack-backend-ctfq.onrender.com/api/openapi.json;
        }

        location /api/ {
            limit_req zone=mylimit burst=5 nodelay;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            access_by_lua_file /usr/local/openresty/nginx/jwt.lua;
            proxy_pass https://blackjack-backend-ctfq.onrender.com;
        }

        location /auth/ {
            limit_req zone=mylimit burst=5 nodelay;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            access_by_lua_file /usr/local/openresty/nginx/jwt.lua;
            proxy_pass https://blackjack-backend-ctfq.onrender.com/api/auth;
        }
    }
}
